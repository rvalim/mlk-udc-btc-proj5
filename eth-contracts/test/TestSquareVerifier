// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");

contract("Verifier", (accounts, web3) =>{
    let TEST;
    try {
        TEST = require("./TestConstants")(accounts, web3);
    } catch (e) {
        console.log(`TEST setup failed\n${e.message}`);
    }

    // console.log(TEST.correctProof);

    beforeEach(async function () {
         this.contract = await Verifier.new({from: TEST.contractOwner});
    });
    describe("Verifier tests", function () {

        it("verification with correct proof", async function () {
            let result = await this.contract.verifyTx.call(
                TEST.correctProof.A,
                TEST.correctProof.A_p,
                TEST.correctProof.B,
                TEST.correctProof.B_p,
                TEST.correctProof.C,
                TEST.correctProof.C_p,
                TEST.correctProof.H,
                TEST.correctProof.K,
                TEST.correctInput,
                {from: TEST.contractOwner}
            );
            assert.strictEqual(result, true, "Unexpected verification result");

        });

        it("verification with incorrect proof", async function(){
            let result = await this.contract.verifyTx.call(
                TEST.badProof.A,
                TEST.badProof.A_p,
                TEST.badProof.B,
                TEST.badProof.B_p,
                TEST.badProof.C,
                TEST.badProof.C_p,
                TEST.badProof.H,
                TEST.badProof.K,
                TEST.badInput,
                {from: TEST.contractOwner}
            );
            assert.strictEqual(result, false, "Unexpected verification result");
        });
    })
});